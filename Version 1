#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <time.h>


void spielfeldausgabe(short spielfeld [3][3]);					//Diese Funktion gibt das Spielfeld aus
short getShortMinMax(char text[]);								//Sichere Usereingabe
short gültigkeitsprüfung(short spielfeld[3][3], short zug);		//Überprüft ob das Feld noch wählbar ist




int main(void) {

	short spielfeld[3][3] = {{'1','2','3'},{'4','5','6'},{'7','8','9'}};
	char zugabfrage[] = "Bitte wählen Sie Ihr nächstes Feld";
	short zug = 0;
	short gültigkeit;
	short spieler;
	short gewonnen = 0;

	srand((unsigned)time(0));


	spielfeldausgabe(spielfeld);

	for (int i = 1; i <= 9; i++) {

		gültigkeit = 0;

		if (i % 2) {

			spieler = 88;

			do {

				zug = getShortMinMax(zugabfrage);
				gültigkeit = gültigkeitsprüfung(spielfeld, zug);

			} while (gültigkeit == 0);
		}

		else {

			spieler = 79;
			printf("Der Computer ist am Zug:\n");

			do {

				zug = rand() % 9 + 1;
				gültigkeit = gültigkeitsprüfung(spielfeld, zug);

			} while (gültigkeit == 0);
		}

		for (int i = 0; i < 3; i++) {
			for (int n = 0; n < 3; n++) {

				if (zug + 48 == spielfeld[i][n]) spielfeld[i][n] = spieler;
			}
		}

		spielfeldausgabe(spielfeld);

		if (i >= 5) {

			for (int n = 0; n < 3; n++) {
				if ((spielfeld[n][0] == spielfeld[n][1]) & (spielfeld[n][0] == spielfeld[n][2])) gewonnen = 1;
			}

			for (int n = 0; n < 3; n++) {
				if ((spielfeld[0][n] == spielfeld[1][n]) & (spielfeld[0][n] == spielfeld[2][n])) gewonnen = 1;
			}

			if ((spielfeld[0][0] == spielfeld[1][1]) & (spielfeld[0][0] == spielfeld[2][2])) gewonnen = 1;
			if ((spielfeld[0][2] == spielfeld[1][1]) & (spielfeld[0][2] == spielfeld[2][0])) gewonnen = 1;

		}

		if (gewonnen == 1) break;

	}

	if (gewonnen == 0) printf("Es ist unentschieden");
	else if (spieler == 88) printf("Herzlichen Glückwunsch Sie haben gewonnen");
	else printf("Der Computer hat gewonnen");

	return 0;
}

//Funktion zur Ausgabe des Spielfeldes

void spielfeldausgabe(short spielfeld [3][3]) {

	for (int i = 1; i <= 5; i++) {

		if (i % 2 == 0)printf("-|-|-\n");
		else if (i == 1)printf("%c|%c|%c\n", spielfeld[0][0], spielfeld[0][1], spielfeld[0][2]);
		else if (i == 3)printf("%c|%c|%c\n", spielfeld[1][0], spielfeld[1][1], spielfeld[1][2]);
		else if (i == 5)printf("%c|%c|%c\n", spielfeld[2][0], spielfeld[2][1], spielfeld[2][2]);
		
	}

}

//Funktion für die sichere Usereingabe

short getShortMinMax(char text[])
{
	short value;														//Variable für die Annahme des Tps
	int finished = 0;													//variable zur Bestätigung eines erfolgreichen Tips
	char ch;															//Variable zur Überprüfung von ungültigen Zeichen hinter der Zahl
	int retVal;															//Variable zur überprüfung von scanf

	do {

		printf("%s: ", text);
		ch = '\0';
		retVal = scanf("%hd%c", &value, &ch);

		if (retVal != 2) printf("Das war keine korrekte Zahl!\n");
		else if (ch != '\n') printf("Unerwartete Zeichen hinter der Zahl!\n");
		else if (value < 1 || value > 9) printf("Die Zahl ist nicht zwischen 1 und 49!\n");
		else finished = 1;

		while (ch != '\n') retVal = scanf("%c", &ch);

	} while (!finished);

	return value;

}

//Diese Funktion überprüft, ob das feld bereits gewählt wurde

short gültigkeitsprüfung(short spielfeld[3][3], short zug) {

	for (int i = 0; i < 3; i++) {
		for (int n = 0; n < 3; n++) {

			if (zug + 48 == spielfeld[i][n]) return 1;
		}
	}
	return 0;
}
